{"ast":null,"code":"const APIURL = 'https://strangers-things.herokuapp.com/api/2202-FTB-ET-WEB-PT';\nexport const fetchPosts = async () => {\n  try {\n    const response = await fetch(`${APIURL}/posts`);\n    const results = await response.json();\n    const posts = results.data.posts;\n    if (results.error) throw results.error;\n    console.log(`This is all of the posts: ${posts}`);\n    return posts;\n  } catch (err) {\n    console.error(err.messages);\n  }\n};\nexport const fetchUserPosts = async token => {\n  await fetch(`${APIURL}/posts`, {\n    method: \"GET\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(response => response.json()).then(result => {\n    let myPostsArray = []; //console.log(result);\n\n    let posts = result.data.posts; //return result.data.posts;\n\n    posts.map(post => {\n      if (post.isAuthor === true) {\n        myPostsArray.push(post);\n      }\n    });\n    console.log(`This is an array of my posts: ${myPostsArray}`);\n    return myPostsArray;\n  }).catch(console.error);\n};\nexport const fetchMessages = async token => {\n  await fetch(`${APIURL}/users/me`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n    console.log(`This should access all of my messages: ${result.data.messages}`);\n  }).catch(console.error);\n};\nexport const postRequest = async (token, title, description, price, location, delivery) => {\n  try {\n    await fetch('https://strangers-things.herokuapp.com/api/2202-FTB-ET-WEB-PT/posts', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        post: {\n          title: title,\n          description: description,\n          price: price,\n          location: location,\n          willDeliver: delivery\n        }\n      })\n    }).then(response => response.json()).then(result => {\n      console.log(`Return of Message Post Request ${result}`);\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = async (token, postID) => {\n  fetch(`${APIURL}/posts/${postID}`, {\n    method: \"DELETE\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(response => response.json()).then(result => {\n    console.log(`Return of Post Delete Request ${result}`);\n  }).catch(console.error);\n};\nexport const patchPost = async (token, postID, title, description, price, location, delivery) => {\n  fetch(`${APIURL}/posts/${postID}`, {\n    method: \"PATCH\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      post: {\n        title: title,\n        description: description,\n        price: price,\n        location: location,\n        willDeliver: delivery\n      }\n    })\n  }).then(response => response.json()).then(result => {\n    console.log(`Return of Post Edit Request ${result}`);\n  }).catch(console.error);\n};","map":{"version":3,"names":["APIURL","fetchPosts","response","fetch","results","json","posts","data","error","console","log","err","messages","fetchUserPosts","token","method","headers","then","result","myPostsArray","map","post","isAuthor","push","catch","fetchMessages","postRequest","title","description","price","location","delivery","body","JSON","stringify","willDeliver","message","deletePost","postID","patchPost"],"sources":["/Users/jacqueline.floyd/Desktop/Course Work/Strangers Things 2/strangers-things/src/api/APIcalls.js"],"sourcesContent":["const APIURL = 'https://strangers-things.herokuapp.com/api/2202-FTB-ET-WEB-PT'\n\nexport const fetchPosts = async () => {\n        \n        try {\n        const response = await fetch(`${APIURL}/posts`)\n        const results = await response.json();\n        const posts = results.data.posts\n        if (results.error) throw results.error; \n        console.log(`This is all of the posts: ${posts}`)\n        return posts;\n        } catch (err) {\n          console.error(err.messages);\n        }\n    }\n\n export const fetchUserPosts = async (token) => {\n    await fetch(`${APIURL}/posts`, {\n        method: \"GET\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n      }).then(response => response.json())\n        .then(result => {\n          let myPostsArray=[];\n          //console.log(result);\n          let posts = result.data.posts;\n         //return result.data.posts;\n           posts.map((post) => {if (post.isAuthor === true) {myPostsArray.push(post)}})\n          console.log(`This is an array of my posts: ${myPostsArray}`)\n           return myPostsArray;\n        })\n        .catch(console.error);\n\n}\n\nexport const fetchMessages = async (token) => {\n\n        await fetch(`${APIURL}/users/me`, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}` \n          },\n        }).then(response => response.json())\n          .then(result => {\n            console.log(result)\n              console.log(`This should access all of my messages: ${result.data.messages}`);\n          })\n          .catch(console.error);\n        };\n\n\n\n\n export const postRequest = async (token, title, description, price, location, delivery) => {\n        try{\n          await fetch('https://strangers-things.herokuapp.com/api/2202-FTB-ET-WEB-PT/posts', {\n              method: \"POST\",\n              headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}` \n           },\n          body: JSON.stringify({\n            post: {\n              title: title,\n              description: description,\n              price: price,\n              location: location,\n              willDeliver: delivery\n            }\n          })\n        }).then(response => response.json())\n          .then(result => {\n            console.log(`Return of Message Post Request ${result}`);\n          })\n      } catch(error) {\n          console.log(error.message)\n      } \n      };\n\n\n      \nexport const deletePost = async (token, postID) => {\n    fetch(`${APIURL}/posts/${postID}`, {\n        method: \"DELETE\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n        }\n        }).then(response => response.json())\n        .then(result => {\n            console.log(`Return of Post Delete Request ${result}`);\n        })\n        .catch(console.error);\n}\n\nexport const patchPost = async (token, postID, title, description, price, location, delivery) => {\n  fetch(`${APIURL}/posts/${postID}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        post: {\n          title: title,\n          description: description,\n          price: price,\n          location: location,\n          willDeliver: delivery\n        }\n      })\n    }).then(response => response.json())\n      .then(result => {\n        console.log(`Return of Post Edit Request ${result}`);\n      })\n  .catch(console.error);\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}