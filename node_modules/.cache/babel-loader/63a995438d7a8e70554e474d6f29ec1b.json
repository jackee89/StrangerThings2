{"ast":null,"code":"var _jsxFileName = \"/Users/jacqueline.floyd/Desktop/Course Work/Strangers Things 2/strangers-things/src/components/HeadersComponents/RenderMessages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RenderMessages = _ref => {\n  _s();\n\n  let {\n    token,\n    username,\n    APIURL\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  let myInboxMessages = [];\n  let mySentMessages = [];\n\n  const fetchMyMessages = async token => {\n    await fetch(`${APIURL}/users/me`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(response => response.json()).then(result => {\n      //console.log(result)\n      console.log(`These are my messages: ${result.data.messages}`);\n      setMessages(result.data.messages);\n    }).catch(console.error);\n  };\n\n  useEffect(() => {\n    fetchMyMessages(token);\n  }, []);\n  messages.map(message => {\n    if (message.fromUser.username === username) {\n      mySentMessages.push(message);\n    } else {\n      myInboxMessages.push(message);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"inboxHeader\",\n      children: \"Inbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: myInboxMessages.map((message, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"boxTitle\",\n            children: message.fromUser.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Post: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 26\n            }, this), message.post.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Message: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 26\n            }, this), message.content]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/message\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              children: \"Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 23\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"inboxHeader\",\n      children: \"Sent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: mySentMessages.map((message, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"sentMessage\",\n          className: \"message\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"boxTitle\",\n            children: [\"Post: \", message.post.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 27\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RenderMessages, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n\n_c = RenderMessages;\nexport { RenderMessages };\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderMessages\");","map":{"version":3,"names":["React","useEffect","useState","Link","RenderMessages","token","username","APIURL","messages","setMessages","myInboxMessages","mySentMessages","fetchMyMessages","fetch","headers","then","response","json","result","console","log","data","catch","error","map","message","fromUser","push","index","post","title","content"],"sources":["/Users/jacqueline.floyd/Desktop/Course Work/Strangers Things 2/strangers-things/src/components/HeadersComponents/RenderMessages.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst RenderMessages = ({token, username, APIURL}) => {\n\n  const [messages, setMessages] =useState([])\n\n\n\n  let myInboxMessages= [];\n  let mySentMessages= [];\n\n  const fetchMyMessages = async (token) => {\n      await fetch(`${APIURL}/users/me`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}` \n        },\n      }).then(response => response.json())\n        .then(result => {\n            //console.log(result)\n            console.log(`These are my messages: ${result.data.messages}`);\n            setMessages(result.data.messages)  \n        })\n        .catch(console.error);\n      };\n\n\n  useEffect(()=>{\n    fetchMyMessages(token);\n  }, []);\n\n\n\n  messages.map((message)=>{\n    if( message.fromUser.username === username) {\n      mySentMessages.push(message);\n    } else {\n      myInboxMessages.push(message);\n    }\n  })\n\n\n    return <>\n          <h3 className='inboxHeader'>Inbox</h3>\n          <div>{myInboxMessages.map((message, index)=>{\n            return <div className='message'key={index}>\n                      <p className='boxTitle'>{message.fromUser.username}</p>\n                      <p><b>Post: </b>{message.post.title}</p>\n                      <p><b>Message: </b>{message.content}</p>\n                      <Link to='/message'><button className='button'>Reply</button></Link>\n                  </div>\n          })}\n          </div>\n\n          <h3 className='inboxHeader'>Sent</h3>\n          <div>{ mySentMessages.map((message, index)=>{\n                return <div id=\"sentMessage\" className='message' key={index}>\n                          {/* <p>find a way to get username to display</p>  */}\n                          <p className='boxTitle'>Post: {message.post.title}</p>\n                          <p>{message.content}</p>\n                          {/* <Link to='/message'><button className='button'>Send Another?</button></Link>  */}\n                        </div>\n          })}\n          </div>\n      </>\n}\n\n export {RenderMessages}\n\n\n\n\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAEA,MAAMC,cAAc,GAAG,QAA+B;EAAA;;EAAA,IAA9B;IAACC,KAAD;IAAQC,QAAR;IAAkBC;EAAlB,CAA8B;EAEpD,MAAM,CAACC,QAAD,EAAWC,WAAX,IAAyBP,QAAQ,CAAC,EAAD,CAAvC;EAIA,IAAIQ,eAAe,GAAE,EAArB;EACA,IAAIC,cAAc,GAAE,EAApB;;EAEA,MAAMC,eAAe,GAAG,MAAOP,KAAP,IAAiB;IACrC,MAAMQ,KAAK,CAAE,GAAEN,MAAO,WAAX,EAAuB;MAChCO,OAAO,EAAE;QACP,gBAAgB,kBADT;QAEP,iBAAkB,UAAST,KAAM;MAF1B;IADuB,CAAvB,CAAL,CAKHU,IALG,CAKEC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALd,EAMHF,IANG,CAMEG,MAAM,IAAI;MACZ;MACAC,OAAO,CAACC,GAAR,CAAa,0BAAyBF,MAAM,CAACG,IAAP,CAAYb,QAAS,EAA3D;MACAC,WAAW,CAACS,MAAM,CAACG,IAAP,CAAYb,QAAb,CAAX;IACH,CAVG,EAWHc,KAXG,CAWGH,OAAO,CAACI,KAXX,CAAN;EAYC,CAbL;;EAgBAtB,SAAS,CAAC,MAAI;IACZW,eAAe,CAACP,KAAD,CAAf;EACD,CAFQ,EAEN,EAFM,CAAT;EAMAG,QAAQ,CAACgB,GAAT,CAAcC,OAAD,IAAW;IACtB,IAAIA,OAAO,CAACC,QAAR,CAAiBpB,QAAjB,KAA8BA,QAAlC,EAA4C;MAC1CK,cAAc,CAACgB,IAAf,CAAoBF,OAApB;IACD,CAFD,MAEO;MACLf,eAAe,CAACiB,IAAhB,CAAqBF,OAArB;IACD;EACF,CAND;EASE,oBAAO;IAAA,wBACD;MAAI,SAAS,EAAC,aAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADC,eAED;MAAA,UAAMf,eAAe,CAACc,GAAhB,CAAoB,CAACC,OAAD,EAAUG,KAAV,KAAkB;QAC1C,oBAAO;UAAK,SAAS,EAAC,SAAf;UAAA,wBACG;YAAG,SAAS,EAAC,UAAb;YAAA,UAAyBH,OAAO,CAACC,QAAR,CAAiBpB;UAA1C;YAAA;YAAA;YAAA;UAAA,QADH,eAEG;YAAA,wBAAG;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAH,EAAiBmB,OAAO,CAACI,IAAR,CAAaC,KAA9B;UAAA;YAAA;YAAA;YAAA;UAAA,QAFH,eAGG;YAAA,wBAAG;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAH,EAAoBL,OAAO,CAACM,OAA5B;UAAA;YAAA;YAAA;YAAA;UAAA,QAHH,eAIG,QAAC,IAAD;YAAM,EAAE,EAAC,UAAT;YAAA,uBAAoB;cAAQ,SAAS,EAAC,QAAlB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAApB;YAAA;YAAA;YAAA;UAAA,QAJH;QAAA,GAA6BH,KAA7B;UAAA;UAAA;UAAA;QAAA,QAAP;MAMD,CAPK;IAAN;MAAA;MAAA;MAAA;IAAA,QAFC,eAYD;MAAI,SAAS,EAAC,aAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAZC,eAaD;MAAA,UAAOjB,cAAc,CAACa,GAAf,CAAmB,CAACC,OAAD,EAAUG,KAAV,KAAkB;QACtC,oBAAO;UAAK,EAAE,EAAC,aAAR;UAAsB,SAAS,EAAC,SAAhC;UAAA,wBAEG;YAAG,SAAS,EAAC,UAAb;YAAA,qBAA+BH,OAAO,CAACI,IAAR,CAAaC,KAA5C;UAAA;YAAA;YAAA;YAAA;UAAA,QAFH,eAGG;YAAA,UAAIL,OAAO,CAACM;UAAZ;YAAA;YAAA;YAAA;UAAA,QAHH;QAAA,GAA+CH,KAA/C;UAAA;UAAA;UAAA;QAAA,QAAP;MAML,CAPM;IAAP;MAAA;MAAA;MAAA;IAAA,QAbC;EAAA,gBAAP;AAuBH,CA/DD;;GAAMxB,c;;KAAAA,c;AAiEL,SAAQA,cAAR"},"metadata":{},"sourceType":"module"}